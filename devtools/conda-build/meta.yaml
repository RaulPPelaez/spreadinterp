package:
  name: spreadinterp
  version: {{ GIT_DESCRIBE_TAG }}

source:
  git_url: ../../

build:
  number: 0
  string: cuda{{ CUDA_VERSION }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}
    
requirements:

  build:
    - python ={{ PYTHON_VERSION }}
    - cmake >=3.22
    - cuda-version {{ CUDA_VERSION }}
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - cuda-libraries-dev
    - cuda-nvcc 
    - make
    - nanobind-abi
  host:
    - python ={{ PYTHON_VERSION }}
    - cuda-version {{ CUDA_VERSION }}
    - blas-devel  * *netlib
    - libblas
    - libcblas
    - liblapack
    - liblapacke
    - libcufft-dev
    - libcublas-dev
    - numpy *
    - nanobind
  run:
    - python ={{ PYTHON_VERSION }}
    - cuda-version >={{ CUDA_VERSION }}
    - cuda-cudart
    - cupy
    - numpy

test:
  requires:
    # Prove that netlib-linked BLAS works with MKL
    - libblas * *mkl  # [x86 or x86_64]
  imports:
    - spreadinterp
    
about:
  home: https://github.com/RaulPPelaez/spreadinterp
  license: MIT
  summary: spreadinterp allows to transform between Eulerian (grid based) and Lagrangian (particle based) descriptions by making use of the Immersed Boundary Method in Python. Requires an NVIDIA GPU.
